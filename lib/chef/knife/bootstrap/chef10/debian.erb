bash -c '
<%=
  if knife_config[:bootstrap_proxy]
    %{export http_proxy="#{knife_config[:bootstrap_proxy]}"}
  end
-%>

export hostname="<%= @config[:chef_node_name] %>"
export webui_password="<%= ENV['WEBUI_PASSWORD'] %>"
export amqp_password="<%= ENV['AMQP_PASSWORD'] %>"
export DEBIAN_FRONTEND=noninteractive

set -x

setup() {
  apt-get update
  apt-get install -y lsb-release

  platform="$(lsb_release -is | tr [[:upper:]] [[:lower:]])"
  platform_version="$(lsb_release -rs)"
}

set_hostname_for_ubuntu() {
  if hostname | grep -q "$hostname" >/dev/null ; then
    printf "Hostname is correct, so skipping...\n"
    return
  fi

  local host_first="$(echo $hostname | cut -d . -f 1)"
  local hostnames="${hostname} ${host_first}"

  echo $hostname > /etc/hostname
  if egrep -q "^127.0.1.1[[:space:]]" /etc/hosts >/dev/null ; then
    sed -i "s/^\(127[.]0[.]1[.]1[[:space:]]\+\)/\1${hostnames} /" \
      /etc/hosts
  else
    sed -i "s/^\(127[.]0[.]0[.]1[[:space:]]\+.*\)$/\1\n127.0.1.1 ${hostnames} /" \
      /etc/hosts
  fi
  service hostname start
}

set_hostname_for_debian() {
  if hostname --fqdn | grep -q "^${hostname}$" || hostname --short | grep -q "^${hostname}$" ; then
    printf "Hostname is correct, so skipping...\n"
    return
  fi

  local host_first="$(echo $hostname | cut -d . -f 1)"

  sed -r -i "s/^(127[.]0[.]1[.]1[[:space:]]+).*$/\\1${hostname} ${host_first}/" \
    /etc/hosts
  echo $host_first > /etc/hostname
  hostname -F /etc/hostname
}

add_opscode_apt_repo() {
  echo "deb http://apt.opscode.com/ $(lsb_release -cs)-0.10 main" > \
    /etc/apt/sources.list.d/opscode.list

  # add the GPG Key and Update Index
  mkdir -p /etc/apt/trusted.gpg.d
  apt-get update
  # permanent upgradeable keyring
  apt-get install -y --force-yes opscode-keyring
  apt-get upgrade -y
}

preseed_chef_pkg() {
  local preseed=/var/cache/local/preseeding/chef-server.seed

  mkdir -p $(dirname $preseed)
  cat <<PRESEED > $preseed
chef	chef/chef_server_url	string	http://127.0.0.1:4000
chef-server-webui	chef-server-webui/admin_password	password	$webui_password
chef-solr	chef-solr/amqp_password	password	$amqp_password
PRESEED

  debconf-set-selections $preseed
}

install_chef_server() {
  preseed_chef_pkg

  apt-get install -y --force-yes chef chef-server libshadow-ruby1.8
}

config_chef_solo() {
  ## Configure Apache2 to proxy SSL traffic, using chef-solo
  local tmp_solo="$1"

  mkdir -p $tmp_solo
  cat > $tmp_solo/solo.rb <<SOLO_RB
file_cache_path "$tmp_solo"
cookbook_path   "$tmp_solo/cookbooks"
SOLO_RB

  cat <<BOOTSTRAP_JSON > $tmp_solo/bootstrap.json
{
  "chef_server" : {
    "webui_enabled" : true,
    "ssl_req" : "/C=CA/ST=Several/L=Locality/O=Example/OU=Operations/CN=${hostname}/emailAddress=root@${hostname}"
  },
  "run_list" : [ "recipe[chef-server::apache-proxy]" ]
}
BOOTSTRAP_JSON
}

enable_ssl_proxy() {
  local tmp_solo=/tmp/chef-solo

  config_chef_solo $tmp_solo

  chef-solo -c $tmp_solo/solo.rb -j $tmp_solo/bootstrap.json \
     -r http://s3.amazonaws.com/chef-solo/bootstrap-latest.tar.gz

  rm -rf $tmp_solo
}

setup
set_hostname_for_${platform}
add_opscode_apt_repo
install_chef_server
enable_ssl_proxy

printf -- "-----> Bootstraping Chef Server on ${hostname} is complete.\n"
'
